#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
bool solve(BinaryTreeNode<int> *root,unordered_set<int> &st,int &k){

    if(root==NULL)
        return false;

    if(solve(root->left,st,k))
         return true;

    if(st.find(k- root->data)!=st.end())
        return true;
    st.insert(root->data);

    if(solve(root->right,st,k)) return true;
         return false;
}

bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    unordered_set<int> st;
    return solve(root,st,k);
}
