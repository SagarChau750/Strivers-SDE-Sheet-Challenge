/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *num1, Node *num2)
{
    Node dummy(0);  // Dummy node to simplify addition
    Node* curr = &dummy;  // Pointer to the current node
    int carry = 0;  // Carry value for addition

    while (num1 || num2 || carry) {
        int sum = carry;
        if (num1) {
            sum += num1->data;
            num1 = num1->next;
        }
        if (num2) {
            sum += num2->data;
            num2 = num2->next;
        }
        
        carry = sum / 10;  // Update the carry value
        curr->next = new Node(sum % 10);  // Create a new node with the digit sum
        curr = curr->next;  // Move the current pointer
    }

    return dummy.next;  // Return the head of the result list

}
